[
  {
    "speakers": [
      "Alvaro Duran"
    ],
    "type": "Talk",
    "lang": "en",
    "title": "Pyments: How To Design Payment Applications In Python",
    "text": "Payments are a massive part of how the world works. But most engineers know very little about it.\n\nThat’s sad, because, as more and more of business happens online, there’s an increasing demand for payment applications that are scalable, and maintainable.\n\nBesides, Python is a great programming language to build payment applications!\n\nIt is very interoperable, has a thriving open source community, and even non-engineers can contribute significantly to software built with it. In payments, readability counts, too!\n\nIn this talk, we’re going to dive deep into how to build money software effectively. You’ll learn why Python and payments are a match made in heaven, and how to leverage the language to build your own payment applications, in-house, fast, and effectively.\n\nThat way, you’ll cut some intermediaries in the process, saving your company a lot of money. It is no wonder why software engineers that can build payment applications are in high demand, they can point to their code and say “that prints money”.\n\nThe outline of the talk is:\n\nShut Up And Take My Money - Python is the Perfect Payments Language (5min)\nData-classes, Composition and A Chain of Responsibility (5-10min)\nUnification, and the Anti-corruption Layer (5min)\nHand over Fist - Debugging Payment Applications (5min)\nOutro - Every Company is a Payments Company (<5min)\n"
  },
  {
    "speakers": [
      "Daniel Hervás"
    ],
    "type": "Talk",
    "lang": "en",
    "title": "Naming: Why it's important and how to do it right",
    "text": "When reviewing PRs from junior devs, the most common issue I find isn't bad syntax or incorrect logic. It's imprecise variable names!\nThis aspect of programming, which seems unimportant or inconsequential to new programmers, is actually of extreme importance and key in the maintainability of a project.\nIn this talk, we'll go over some naming conventions, tips and best practices to make your variables and functions as self-descriptive as possible."
  },
  {
    "speakers": [
      "Eli Holderness"
    ],
    "type": "Talk",
    "lang": "en",
    "title": "Pointers? In My Python? It's More Likely Than You Think!",
    "text": "Python is a wonderful thing that takes all the complication of memory management away from us. We don’t have to worry about pre-allocating memory for our objects, or remember to free it once we’re done. So, given that we’re not doing it manually, how do these things happen? Do we have to care? Well, sometimes. Maybe.\n\nIn this talk, we’ll discuss what a pointer is, where they crop in in Python, and what you need to know in order to avoid getting tripped up by them. We’ll also cover the id of an object, why it's implemented the way it is, and why 'equal' is different from 'identical'. Finally, we’ll talk about garbage collection, what reference counting is, and how CPython knows when it’s time to get rid of unused objects.\n\nWhether you just want to understand what’s going on under the hood without having to dive into the implementation, or you’re on the hunt for some new diabolical things to do with code (self-referential lists are only the beginning!), come along to this talk and learn about the pointers in your Python.\n\nThis talk is aimed at anyone with an interest in how Python handles objects in memory, or who’s ever been confused by side-effects popping up in their code. Absolutely no knowledge of C is required, and Python beginners are extremely welcome."
  },
  {
    "speakers": [
      "Petr Viktorin"
    ],
    "type": "Talk",
    "lang": "cz",
    "title": "Python jako projekt",
    "text": "Většina z nás používá Python jako jako jazyk, ve kterém vyjádřit co je potřeba udělat, a jako nástroj který to pak udělá. Jak se ale stane, že takový Python existuje? Kdo se o něj stará? Kdo píše dokumentaci? Kde a jak se tihle lidi domlouvají? A kdyby ses chtěl/a nějakým způsobem zapojit i ty, jak na to?"
  },
  {
    "speakers": [
      "Jakub Hantabal",
      "Laura Johanesová"
    ],
    "type": "Talk",
    "lang": "en",
    "title": "Innovative data science education: The story of Data Science Academy",
    "text": "Taking the first step in learning data science in Python can be challenging. To help people overcome this fear, we co-founded Data Science Academy - an NGO providing accessible data science education focused on building a collaborative community of data enthusiasts. Over the past year, we organized two week-long bootcamps Winter Data School and Summer Data School, as well as five shorter workshops, where we show the magic of Python and inspire people to continue their programming journey.\n\nIn this talk, we will share our story of how we set up Data Science Academy, what we do, and how we motivate people to take up data science. We will discuss why quality education and focus of attendees require a physical presence of multiple lecturers, and how to make transition to Python straightforward by drawing parallels with Excel and selecting the key concepts to explain. Lastly, we will demonstrate our unique teaching materials utilizing Jupyter Notebook, and how we use them in our workshops, and how participants on our events used them to advance their careers and set up new collaborations.\n"
  },
  {
    "speakers": [
      "Karel Boháček"
    ],
    "type": "Talk",
    "lang": "en",
    "title": "Sign language recognition: Enabling communication for the hearing-impaired through machine learning",
    "text": "In this talk, our project on sign language recognition will be presented. The aim of the project is to create a prototype app that can facilitate communication between hearing-impaired individuals and those who do not know sign language. The challenges faced by hearing-impaired individuals in communicating with the general population will be discussed, and how technology can help bridge this gap will be explained.\n\nA Python code relying on Mediapipe library will be introduced, and its use in extracting key features from sign language gestures, such as hand and finger positions and movements, will be explained. The machine learning techniques used to recognize and classify these gestures will be delved into. The data preprocessing steps, model selection, and training process will be covered, as well as the evaluation metrics used to measure the accuracy of the model. Finally, the prototype will be showcased, and its operation in real-time will be\ndemonstrated. The limitations of our current approach and potential future developments in the field will also be discussed."
  },
  {
    "speakers": [
      "Jacek Kołodziej"
    ],
    "type": "Talk",
    "lang": "en",
    "title": "GIL: What's the hassle and... should I care?",
    "text": "GIL often appears as a scary, obscure *gizmo*. Misunderstanding this aspect of Python may lead to *suboptimal architectural choices*. I invite you to see my attempt at explaining the GIL and its implications, as well as providing pointers for **how to deal with the GIL** in specific situations.\n\nThere have been (and still are), of course, attempts to get around the GIL - or *get rid of it* altogether. I hope to give some light to these works.\n\nBy providing a comprehensive overview of today's GIL in CPython, this presentation aims to help make **better design choices** - be it choosing a concurrency/parallelism model, Python implementation to use - or even whether or not to drop. Python entirely."
  },
  {
    "speakers": [
      "Yuliia Barabash"
    ],
    "type": "Talk",
    "lang": "en",
    "title": "Saying Bye to the Keyboard, Hello to Alexa with Python AWS Lambda",
    "text": "Sometimes, you sit at home and think about whether it would be possible to automate your tasks with voice instructions. For example, do I receive emails from person A, or can you summarize my day? How about doing this without opening the laptop? Thanks to Alexa you can use your voice and send commands to other applications to make it happen. The best thing is you can do this with Python! \n\nIn this session, we will teach you about the main components of Alexa, how to get started with the Developer console, and how to customize Alexa using our favorite language, Python in a serverless way. We will also demonstrate how to incorporate Alexa into your daily developer life, and you might find that, after this talk, you won't even need your keyboard — you'll just need your voice for automation.\n\nJoin us, if you are curious about constructing small and hilarious applications to break the monotony of your routine with Alexa. By the end of this session, you will learn how to do some development tricks with Alexa and how to grant your little friend Alexa's new personalized skills using Python.\n"
  },
  {
    "speakers": [
      "Luboslav Lacko"
    ],
    "type": "Talk",
    "lang": "sk",
    "title": "Ako v Pythone naprogramovať a natrénovať neurónovú sieť na generovanie textu",
    "text": "Praktická ukážka ako naprogramovať neurónovú sieť, ktorá sa natrénuje na textoch kníh a následne dokáže generovať texty. Priebežne bude vysvetlené fungovanie neurónových sietí vrátane doprednej a spätnej propagácie, aktivačných funkcií, miznúceho gradientu a podobne "
  },
  {
    "speakers": [
      "Matúš Ferech"
    ],
    "type": "Talk",
    "lang": "en",
    "title": "Nix: know what you are running, testing and deploying",
    "text": "Nix is a tool for declaring reproducible build and development environments. With Nix, you can be sure that every team member is running precisely the same application in the development, testing, and deployment environment. \n\nDo you know the issues when a new team member is trying to set up a local environment for a new project, but it just does not work? Even though you are on the same operating system, use the same application version, and all dependencies are pinned? Are some C-headers missing? Maybe you need to install some system package. Oh, and do you have the same version of the system package? Okay, let's hope we have wheels for this module. Oh no, we are building Alpine docker image, which uses musl libc instead of glibc, so no luck with wheels this time. We better include GCC. And also this and that one. What's the name of the OpenSSL for Alpine? Does it include the c headers? Great! Done! Now, let's do this dance one more time—this time in CI.\n\nThis issue will be a thing of the past with Nix. Let me show you how at my talk!"
  },
  {
    "speakers": [
      "Maxim Danilov"
    ],
    "type": "Talk",
    "lang": "en",
    "title": "Selecting tools to fight complexity in large Python projects",
    "text": "An overcomplicated project increases development and maintenance time.\nIf a complete redesign is not possible, we can try to distribute the complexity across the existing codebase. The AI assistants cannot help us with this task yet, and we should discuss manual methods and tools that can help us. The effectiveness of the proposed ideas will be demonstrated by applying them to large projects from different business areas."
  },
  {
    "speakers": [
      "Miroslav Šedivý"
    ],
    "type": "Talk",
    "lang": "en",
    "title": "Solving Two Hard Problems in Computer Science Using Pandas",
    "text": "There are 2 hard problems in computer science: cache invalidation, naming things, and off-by-1 errors. -- Leon Bambrick\n\nWhen working with timeseries representing the production data of power plants, the fundamental step is to define a good data structure. The shape of the dataframes must be a good balance between speed and memory usage to work with the right and up-to-date amount of data (cache invalidation). The parameters must have good names for fast and unambiguous identification (naming things). The time intervals must be the correct fit for observed physics to prevent mismatches (off-by-1 errors).\n\nI'll show you a few Python tricks and my experience with how I solved these problems in my projects."
  },
  {
    "speakers": [
      "Sara Jakša"
    ],
    "type": "Talk",
    "lang": "en",
    "title": "The different types of API authentications: the stories from the trenches of third party integrations",
    "text": "APIs are one of the way we are using to communicate between different systems and services. And one of the important components of this system is figuring out, if who is trying to access it and if they are allowed to do this. In this talk I want to talk about the different types of API authentications, that I had seen in the wild as part of my work. We will go through the standard ones, like basic authentication, API Keys and OAuth, but I will also did a quick mention of digest authentication, SOAP, documentation, bit-wise magic and security and legal considerations, all with a short anecdote."
  },
  {
    "speakers": [
      "Štěpán Bechynský"
    ],
    "type": "Talk",
    "lang": "en",
    "title": "Azure OpenAI for Python developers in enterprise organizations",
    "text": "You will see how to use OpenAI in enterprise organizations. How to deploy GPT model just for your organization, how to protect it from public internet access and how to work with Python OpenAI SDK."
  },
  {
    "speakers": [
      "Veronika Kabátová"
    ],
    "type": "Talk",
    "lang": "en",
    "title": "How to not get crazy from information overload",
    "text": "There's too many pieces of advice out there to keep them in mind and actually remember to apply them when it matters. It's tempting to become a genius overnight as the competition is harsh. But trying to become perfect and keep every piece of information in mind is overwhelming and stressful.\n\nWhere's the line between what's realistic, both as a beginner and as experienced programmer? What are some good habits to adopt right away, and how do they relate to your typical programming memes?\n\nWe'll take a look at some behaviors even experienced IT folks struggle with and how to do things instead and why, to get you a head start in your new journey."
  },
  {
    "speakers": [
      "Jeroen Overschie"
    ],
    "type": "Talk",
    "lang": "en",
    "title": "Are you ready for MLOps?",
    "text": "MLOps has survived the hype cycle and is gaining in maturity. But are we looking at MLOps for answers for the _right things_? \nNo matter how valuable MLOps can be for you, without proper building blocks in place MLOps cannot live up to its full potential. What are the prerequisites for MLOps? What parts of MLOps should you focus on? When should you even start thinking about MLOps, or when is ‘plain’ DevOps wiser to focus on first? Join us in this session to learn more!"
  },
  {
    "speakers": [
      "Marcelo Trylesinski"
    ],
    "type": "Talk",
    "lang": "en",
    "title": "Common FastAPI mistakes",
    "text": "We'll go through common FastAPI mistakes I've seen in the last 4 years. We'll see insights on performance, best practices, and use of the framework in general. \n\nLet's go beyond the obvious, and at the end of the talk, you'll know how you can become a FastAPI Expert yourself."
  },
  {
    "speakers": [
      "Tvrtko Strenak"
    ],
    "type": "Talk",
    "lang": "en",
    "title": "Decoding FastStream: A Deeper Dive into the Event Streaming Library",
    "text": "FastStream simplifies the development of services communicating over event streams such as Apache Kafka, Redis and Nats. In our talk, we introduce its origin, basics, and delve into advanced features. Past talks raised awareness; this year, we are slowly shifting focus on technical nuances—implementation details and the development environment—to inspire developers and improve open source contributions."
  }
]
